@using Microsoft.AspNetCore.Identity
@using WebShop.Areas.Identity.Data
@using System.Security.Claims
@inject SignInManager<WebShopUser> SignInManager
@inject UserManager<WebShopUser> UserManager
@{
    var roles = User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(x => x.Value);
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    if (roles.Contains("Admin"))
    {
       <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="Admin" asp-page="/Index" title="Manage">Admin Mannage</a>
       </li>
    }
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
